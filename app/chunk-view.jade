h2 Chunk
	= " "
	= chunk.id
h3 Size = 
	if chunk.size > 1024
		= Math.round(chunk.size/1024) + " KiB"
	else
		= chunk.size + " B"
if chunk.names && chunk.names.length > 0
	h3 Names
	ul
		for name in chunk.names
			li: code= name
if chunk.filenames && chunk.filenames.length > 0
	h3 Files
	ul
		for file in chunk.filenames
			li: code= file
if chunk.parents && chunk.parents.length > 0
	h3 Parents
	chunkTemplate = require("./chunk.jade");
	table.table.table-bordered
		thead
			tr
				th Chunk
				th Size
				th Modules
				th Names
				th Files
		tbody
			for pcId in chunk.parents
				- var pc = null;
				- for(var i = 0; i < stats.chunks.length; i++)
				-  if(stats.chunks[i].id == pcId) { pc = stats.chunks[i]; break; }
				if pc
					!= chunkTemplate({chunk: pc})
if chunk.childrenChunks && chunk.childrenChunks.length > 0
	h3 Children
	chunkTemplate = require("./chunk.jade");
	table.table.table-bordered
		thead
			tr
				th Chunk
				th Size
				th Modules
				th Names
				th Files
		tbody
			for pcId in chunk.childrenChunks
				- var pc = null;
				- for(var i = 0; i < stats.chunks.length; i++)
				-  if(stats.chunks[i].id == pcId) { pc = stats.chunks[i]; break; }
				if pc
					!= chunkTemplate({chunk: pc})
				else
					= pcId
h3 Modules
center: svg.chunk-modules-graph
moduleTemplate = require("./module.jade");
table.table.table-bordered
	thead
		tr
			th Module
			th Name
			th Size
			th Attributes
	tbody
		for module in chunk.modules
			!= moduleTemplate({module: module})

